{"version":3,"sources":["components/todoitem.jsx","components/App.jsx","index.js"],"names":["TodoItem","props","style","textDecoration","checked","userSelect","onClick","e","handler","item","onContextMenu","preventDefault","completed","text","active","data","App","savedLocal","add","console","log","useState","todos","setTodo","inputText","setInputText","linethrough","prevTodo","removeCompleted","splice","className","onChange","value","target","type","map","todo","i","key","Math","random","ReactDOM","render","document","getElementById"],"mappings":";4MAEaA,EAAW,SAACC,GACvB,OACE,wBACEC,MAAO,CACLC,eAAgBF,EAAMG,QAAU,eAAiB,KACjDC,WAAY,QAEdC,QAAS,SAACC,GAAD,OAAON,EAAMO,QAAQP,EAAMQ,OACpCC,cAAe,SAACH,GACdA,EAAEI,iBACFV,EAAMW,UAAUX,EAAMQ,QAGvBR,EAAMY,OCbTC,GAAS,EACTC,EAAO,CACT,CAAC,eAAe,GAChB,CAAC,YAAY,GACb,CAAC,eAAe,IAoFHC,ICvFXC,EDuFWD,EAjFf,SAAaf,GACX,IAAIiB,EAAM,EACNjB,EAAMc,OAASD,IACjBA,GAAS,EACTI,IACAH,EAAOd,EAAMc,KACbI,QAAQC,IAAInB,EAAMc,KAAMG,EAAKJ,IAE/B,MAAyBO,mBAASN,GAAlC,mBAAOO,EAAP,KAAcC,EAAd,KAEA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEAN,QAAQC,IAAIF,EAAKJ,GAEjB,IAgBMY,EAAc,SAACjB,GACnBc,GAAQ,SAACI,GAEP,OADAA,EAASlB,GAAM,IAAMkB,EAASlB,GAAM,GAC7B,YAAIkB,OAKTC,EAAkB,SAACnB,GACvBc,GAAQ,SAACI,GAEP,OADAA,EAASE,OAAOpB,EAAM,GACf,YAAIkB,OAWf,OACE,yBAAKG,UAAU,aACb,yBAAKA,UAAU,WACb,2CAEF,yBAAKA,UAAU,QACb,2BAAOC,SA5CM,SAACxB,GAClB,IAAQyB,EAAUzB,EAAE0B,OAAZD,MACRP,EAAaO,IA0CoBE,KAAK,OAAOF,MAAOR,IAChD,4BAAQlB,QAxCE,WACdkB,GACED,GAAQ,SAACI,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAqB,CAACH,GAAW,QAIrCC,EAAa,MAkCP,uCAGJ,6BACE,4BACGH,EAAMa,KAAI,SAACC,EAAMC,GAAP,OACT,kBAAC,EAAD,CACE7B,QAASkB,EACTd,UAAWgB,EACXU,IAAKC,KAAKC,SACV/B,KAAM4B,EACNxB,KAAMuB,EAAK,GACXhC,QAASgC,EAAK,YCvE5BK,IAASC,OACP,kBAAC,EAAD,CAAK3B,KAAME,GAA0B,OACrC0B,SAASC,eAAe,W","file":"static/js/main.43b50153.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const TodoItem = (props) => {\r\n  return (\r\n    <li\r\n      style={{\r\n        textDecoration: props.checked ? \"line-through\" : null,\r\n        userSelect: \"none\"\r\n      }}\r\n      onClick={(e) => props.handler(props.item)}\r\n      onContextMenu={(e) => {\r\n        e.preventDefault();\r\n        props.completed(props.item);\r\n      }}\r\n    >\r\n      {props.text}\r\n    </li>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\nimport { TodoItem } from \"./todoitem\";\nlet active = false;\nlet data = [\n  [\"Hello World\", false],\n  [\"Hy Wrold\", false],\n  [\"How are you\", false],\n];\n\nfunction App(props) {\n  let add = 1;\n  if (props.data && !active) {\n    active = true;\n    add++;\n    data = props.data;\n    console.log(props.data, add, active);\n  }\n  const [todos, setTodo] = useState(data);\n\n  const [inputText, setInputText] = useState(\"\");\n\n  console.log(add, active);\n  //! Change Text of Input\n  const changeText = (e) => {\n    const { value } = e.target;\n    setInputText(value);\n  };\n  // !Add todo to todos Arrays\n  const addTodo = () => {\n    inputText &&\n      setTodo((prevTodo) => {\n        return [...prevTodo, [inputText, false]];\n      });\n    // saveLocalStorage();\n\n    setInputText(\"\");\n  };\n\n  //! Mark line Through todo ITem\n  const linethrough = (item) => {\n    setTodo((prevTodo) => {\n      prevTodo[item][1] = !prevTodo[item][1];\n      return [...prevTodo];\n    });\n    // saveLocalStorage();\n  };\n  //! Remove Completed One\n  const removeCompleted = (item) => {\n    setTodo((prevTodo) => {\n      prevTodo.splice(item, 1);\n      return [...prevTodo];\n    });\n    // saveLocalStorage();\n  };\n\n  // ! Store local Storage\n  const saveLocalStorage = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  // Return\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <div className=\"form\">\n        <input onChange={changeText} type=\"text\" value={inputText} />\n        <button onClick={addTodo}>\n          <span>Add</span>\n        </button>\n      </div>\n      <div>\n        <ul>\n          {todos.map((todo, i) => (\n            <TodoItem\n              handler={linethrough}\n              completed={removeCompleted}\n              key={Math.random()}\n              item={i}\n              text={todo[0]}\n              checked={todo[1]}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nlet savedLocal;\n\nconst restoreLocal = () => {\n  savedLocal = JSON.parse(localStorage.getItem(\"todos\"));\n  if (!savedLocal) return;\n};\n// restoreLocal();\nReactDOM.render(\n  <App data={savedLocal ? savedLocal : null} />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}